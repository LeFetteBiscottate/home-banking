openapi: 3.0.1
info:
  title: Swagger admin
  description: 'This is a sample server admin server.  You can find out more about     Swagger
    at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For
    this sample, you can use the api key `special-key` to test the authorization     filters.'
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://admin.swagger.io/v2
- url: http://admin.swagger.io/v2
tags:
- name: Transaction
  description: Everything about your Transaction
  externalDocs:
    description: Find out more
    url: http://swagger.io
paths:
  /transaction/{transactionId}:
    get:  
      tags:
      - Transaction
      summary: Find Transaction by ID
      description: Returns a single Transaction
      operationId: getById
      parameters:
      - name: transactionId
        in: path
        description: ID of transaction to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/transaction'
            application/json:
              schema:
                $ref: '#/components/schemas/transaction'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Current account not found
          content: {}
      security:
      - api_key: []
  /transaction/{start}/{end}:
    get:  
      tags:
      - Transaction
      summary: Find Transaction by period
      description: Returns a single Transaction
      operationId: getByPeriod
      parameters:
      - name: start
        in: path
        description: ID of current account to return
        required: true
        schema:
          type: string
      - name: end   
        in: path
        description: ID of current account to return
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/transaction'
            application/json:
              schema:
                $ref: '#/components/schemas/transaction'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Transaction not found
          content: {}
      security:
      - api_key: []
  /transaction/{accountId}:
    get:  
      tags:
      - Transaction
      summary: Find Transaction by accountID
      description: Returns a single Transaction
      operationId: getAllByAccountId
      parameters:
      - name: accountId
        in: path
        description: ID of account to return related transactions
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/transaction'
            application/json:
              schema:
                $ref: '#/components/schemas/transaction'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Account not found
          content: {}
      security:
      - api_key: []    
      
  /transaction/{accountId}/{start}/{end}:
    get:  
      tags:
      - Transaction
      summary: Find Transaction by accountId and period
      description: Returns a single Transaction
      operationId: getByPeriodAndAccountId
      parameters:
      - name: start
        in: path
        description: ID of current account to return
        required: true
        schema:
          type: string
      - name: end   
        in: path
        description: ID of current account to return
        required: true
        schema:
          type: string
      - name: accountId   
        in: path
        description: ID of current account to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/transaction'
            application/json:
              schema:
                $ref: '#/components/schemas/transaction'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Transaction not found
          content: {}
      security:
      - api_key: []    
  /transaction:
    get:  
      tags:
      - Transaction
      summary: Find all the Transactions
      description: Returns all the Transactions
      operationId: getAll
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/transaction'
            application/json:
              schema:
                $ref: '#/components/schemas/transaction'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Transactions not found
          content: {}
      security:
      - api_key: []
    #/transaction  
    post:
      tags:
      - Transaction
      summary: Insert a transaction
      operationId: insert
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  description: added current account
      responses:
        405:
          description: Invalid input
          content: {}
        409:
          description: Transazione non presente nel DB
          content: {}
      security:
      - admin_auth:
        - write:users
        - read:users
      x-codegen-request-body-name: body            
  #/transaction:
    put:
      tags:
      - Transaction
      summary: Update an existing transaction
      operationId: update
      requestBody:
        description: Transaction object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transaction'
          application/xml:
            schema:
              $ref: '#/components/schemas/transaction'
        required: true
      responses:
        400:
          description: Invalid parameters supplied
          content: {}
        404:
          description: Current Account not found
          content: {}
        405:
          description: Validation exception
          content: {}
        409:
          description: Transazione non presente ne DB
          content: {}  
      security:
      - admin_auth:
        - write:users
        - read:users
      x-codegen-request-body-name: body
  #/transaction:
    delete:
      tags:
      - Transaction
      summary: Deletes a transaction
      operationId: delete
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: user not found
          content: {}
        409:
          description: Transazione gia presente nel DB
          content: {}  
      security:
      - admin_auth:
        - write:users
        - read:users

components:
  schemas:
    transaction:
      required:
      - id
      - date
      - source
      - destination
      - description
      - account_id
      - importo
      type: object
      properties:
        id:
          type: integer
          format: int64
        date:
          type: string
        source:
          type: string
        destination:
          type: string
        description:
          type: string
        account_id:
          type: integer
          format: int64
        importo:
          type: number
      xml:
        name: transaction
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  securitySchemes:
    admin_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://admin.swagger.io/oauth/dialog
          scopes:
            write:users: modify transaction
            read:users: read your transaction
    api_key:
      type: apiKey
      name: api_key
      in: header